openapi: 3.0.1
info:
  title: Product API
  description: API for managing products in the database
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/products
    description: Local server

paths:
/api/products:
  /:
    get:
      summary: Get a list of products
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of products to return
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: sort
          schema:
            type: string
          description: Sorting criteria
        - in: query
          name: query
          schema:
            type: string
          description: Search query for filtering products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: array
                    items:
                      type: object
        '400':
          description: Bad request, no products found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: array

  /{id}:
    get:
      summary: Get a specific product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: object
        '400':
          description: Bad request, product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: array
                  error:
                    type: string

    put:
      summary: Update a specific product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                price:
                  type: number
                code:
                  type: string
                stock:
                  type: integer
                category:
                  type: string
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: object
                  mensaje:
                    type: string
        '400':
          description: Bad request, update failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: array
                  error:
                    type: string

    delete:
      summary: Delete a specific product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  mensaje:
                    type: string
        '400':
          description: Bad request, delete failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: array
                  error:
                    type: string

  /:
    post:
      summary: Add a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                price:
                  type: number
                code:
                  type: string
                stock:
                  type: integer
                category:
                  type: string
      responses:
        '200':
          description: Product added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: object
                  mensaje:
                    type: string
