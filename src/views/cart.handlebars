<nav class="navbar navbar-expand-lg bg-body-tertiary">
  <div class="container-fluid">
    <a class="navbar-brand" href="#"><h1 class="text-center"><img src="/static/img/LogoGOAT.png" alt="Logo" width="60" height="60"><b>GOAT</b></h1></a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarText">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
      </ul>
      <span class="navbar-text">
            {{#if user}}
                <p><b>Bienvenido, {{user.firstName}} (Rol: {{user.role}})</b></p>
                <div style="display: flex; gap: 10px;">
                    <a href="/products"><button class="btn btn-dark">Volver</button></a>
                    <form action="/api/sessions/logout" method="get">
                        <button type="submit" class="btn btn-dark">Salir</button>
                    </form>
                </div>
            {{else}}
                <p>Usuario no identificado.</p>
                <a href="/login"><button class="btn btn-dark">Login</button></a>
            {{/if}}
      </span>
    </div>
  </div>
</nav>
<main class="container">
    <div class="productos">
        <h2>Carrito ID: {{cartRender.cartRender._id}}</h2>
        <h2>Carrito del user: {{user.email}}</h2>
        <button class="btn btn-primary add-to-cart" onclick="purchaseCart()">Finalizar compra ({{quantity}})</button>
            <ul class="list-group list-group-flush p-2">
                <h3>Productos del carrito:</h3>
                <div class="row">
                    {{#each this.cartRender.cartRender.products}}
                        <div id="cardProd" class="col-sm-6 col-md-4 col-lg-3 mb-3">
                            <div class="card" style="width: 100%;">
                                <div class="card-img-container">
                                    <img src="{{this._id.thumbnail}}" class="card-img-top" alt="{{this._id.title}}">
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title">{{this._id.title}}</h5>
                                    <p class="card-text">Descripción: {{this._id.description}}</p>
                                    <p class="card-text">Categoría: {{this._id.category}}</p>
                                    <p class="card-text">Cantidad: {{this.quantity}}</p>
                                    <p class="card-text">Precio: ${{this._id.price}}</p>
                                    <button class="btn btn-primary add-to-cart" onclick="addToCart('{{this._id._id}}')">Agregar</button>
                                    <button class="btn btn-primary add-to-cart" onclick="subtractToCart('{{this._id._id}}')">Quitar</button>
                                </div>
                            </div>
                        </div>
                    {{/each}}
                </div>
            </ul>
    </div>
</main>

<script> 
    const addToCart = async (pid) => {
        const cart = '{{user.cart}}';
        const process = await fetch(`/api/carts/${cart}/product/${pid}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        });
        const result = await process.json();
        location.reload(); // Recargar la página
    }
    
    const subtractToCart = async (pid) => {
        const cart = '{{user.cart}}';
        const process = await fetch(`/api/carts/${cart}/product/${pid}`, {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' }
        });
        const result = await process.json();
        location.reload(); // Recargar la página
    }

    const purchaseCart111 = async () => {
        const cart = '{{user.cart}}';
        const process = await fetch(`/api/carts/${cart}/purchase`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        });
        const result = await process.json();
        location.reload(); // Recargar la página
    }

    const purchaseCart = async () => {
        try {

            console.log('entre a Purchase.')
            const cart = '{{user.cart}}';
            const process = await fetch(`/api/carts/${cart}/purchase`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            });
            const result = await process.json();
            if (process.ok) {
                Swal.fire({
                    title: 'Se confirmo su compra. Muchas gracias.',
                    text: result.mensaje,
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location.href = '/products';
                });
            } else {
                Swal.fire({
                    title: 'Error',
                    text: result.error,
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        } catch (error) {
            Swal.fire({
                title: 'Error',
                text: 'Hubo un problema al registrar su compra.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    }
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
<script src="https://cdn.socket.io/4.7.5/socket.io.min.js" integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.8/dist/sweetalert2.all.min.js"></script>